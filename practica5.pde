float x;
float y;
float z;
float angX;
float angY;
PShape esfera1;
PShape esfera2;
PShape esfera3;
PShape esfera4;
PShape piramide;
PImage fuego;

void setup () {
  size(1000,1000,P3D);
  x = width/2.0;
  y = height/2.0;
  z = -width;
  fuego = loadImage("fuego.jpg");
  angX = 0;
  angY = 0;
}

void draw() {
  background(0);
  camera(width/2.0,height/2-0,-width/2.0,x,y,z,0,1,0);
  pushMatrix();
    rotateY(PI/2);
    fill(255,0,0);
    rect(0,0,width,height);
  popMatrix();
  pushMatrix();
    translate(width,0,0);
    rotateY(PI/2);
    fill(0,255,0);
    rect(0,0,width,height);
  popMatrix();
  pushMatrix();
    translate(0,0,-width);
    fill(0,0,255);
    rect(0,0,width,height);
  popMatrix();
  pushMatrix();
    rotateX(-PI/2);
    fill(255,255,0);
    rect(0,0,width,height);
  popMatrix();
  pushMatrix();
    translate(0,height,0);
    rotateX(-PI/2);
    fill(255,0,255);
    rect(0,0,width,height);
  popMatrix();
  pushMatrix();
    translate(width/4.0,3.0*height/4.0,-height/4.0);
    noStroke();
    textureMode(NORMAL);
    esfera1 = createShape(SPHERE,width/16.0);
    beginShape();
    esfera1.setTexture(fuego);
    endShape();
    shape(esfera1);
  popMatrix();
  pushMatrix();
    translate(3.0*width/4.0,3.0*height/4.0,-height/4.0);
    noStroke();
    textureMode(NORMAL);
    esfera2 = createShape(SPHERE,width/16.0);
    beginShape();
    esfera2.setTexture(fuego);
    endShape();
    shape(esfera2);
  popMatrix();
  pushMatrix();
    translate(width/4.0,3.0*height/4.0,-3.0*height/4.0);
    noStroke();
    textureMode(NORMAL);
    esfera3 = createShape(SPHERE,width/16.0);
    beginShape();
    esfera3.setTexture(fuego);
    endShape();
    shape(esfera3);
  popMatrix();
  pushMatrix();
    translate(3.0*width/4.0,3.0*height/4.0,-3.0*height/4.0);
    noStroke();
    textureMode(NORMAL);
    esfera4 = createShape(SPHERE,width/16.0);
    beginShape();
    esfera4.setTexture(fuego);
    endShape();
    shape(esfera4);
  popMatrix();
  pushMatrix();
    lights();
    translate(width/4.0,0,-height/4.0);
    rotateX(3*PI/2);
    piramide = createShape();
    piramide.beginShape(TRIANGLE_STRIP);
    piramide.fill(128,255,0);
    piramide.stroke(0);
    piramide.vertex(-width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(width/10.0,width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(width/10.0,width/10.0,-width/10.0);
    piramide.vertex(-width/10.0,width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(-width/10.0,width/10.0,-width/10.0);
    piramide.vertex(-width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.endShape();
    shape(piramide);
  popMatrix();
  pushMatrix();
    lights();
    translate(3.0*width/4.0,0,-height/4.0);
    rotateX(3*PI/2);
    piramide = createShape();
    piramide.beginShape(TRIANGLE_STRIP);
    piramide.fill(128,255,0);
    piramide.stroke(0);
    piramide.vertex(-width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(width/10.0,width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(width/10.0,width/10.0,-width/10.0);
    piramide.vertex(-width/10.0,width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(-width/10.0,width/10.0,-width/10.0);
    piramide.vertex(-width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.endShape();
    shape(piramide);
  popMatrix();
  pushMatrix();
    lights();
    translate(width/4.0,0,-3.0*height/4.0);
    rotateX(3*PI/2);
    piramide = createShape();
    piramide.beginShape(TRIANGLE_STRIP);
    piramide.fill(128,255,0);
    piramide.stroke(0);
    piramide.vertex(-width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(width/10.0,width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(width/10.0,width/10.0,-width/10.0);
    piramide.vertex(-width/10.0,width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(-width/10.0,width/10.0,-width/10.0);
    piramide.vertex(-width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.endShape();
    shape(piramide);
  popMatrix();
  pushMatrix();
    lights();
    translate(3.0*width/4.0,0,-3.0*height/4.0);
    rotateX(3*PI/2);
    piramide = createShape();
    piramide.beginShape(TRIANGLE_STRIP);
    piramide.fill(128,255,0);
    piramide.stroke(0);
    piramide.vertex(-width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(width/10.0,width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(width/10.0,width/10.0,-width/10.0);
    piramide.vertex(-width/10.0,width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.vertex(-width/10.0,width/10.0,-width/10.0);
    piramide.vertex(-width/10.0,-width/10.0,-width/10.0);
    piramide.vertex(0,0,width/10.0);
    piramide.endShape();
    shape(piramide);
  popMatrix();
  if (keyPressed) {
    if (key == CODED) {
      if (keyCode == UP) {
        if (angY > -90) angY -= 0.25;
      }
      if (keyCode == DOWN) {
        if (angY < 90) angY += 0.25;
      }
      if (keyCode == LEFT) {
        angX -= 0.25;
      }
      if (keyCode == RIGHT) {
        angX += 0.25;
      }
    }
  }
  if (angX >= 360) angX = 0;
  if (angX >= 360) angY = 0;
  x = (width/2.0)*(1 + sin(radians(angX)));
  y = (width/2.0)*(1 + sin(radians(angY)));
  z = -(width/2.0)*(1 + cos(radians(angX)));
}
